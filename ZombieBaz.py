#Mr.Zombie Ur Uncle
#Github : github.com/ZOMBIE-3301
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))
